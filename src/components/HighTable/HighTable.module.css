.hightable {
  & {
    display: flex;
    flex: 1;
    min-height: 0;
    position: relative;
  }
  & * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  /* Note that this class cannot be easily overriden by custom CSS. It's not really an issue as its role is functional. */
  .table-scroll {
    flex: 1;
    overflow: auto;
    & > div {
      position: relative;
    }
  }

  table {
    position: absolute;
    max-width: 100%;
    overflow-x: auto;
  }

  /* cells */
  th,
  td {
    overflow: hidden;
  }

  /* header */
  thead {
    th {
      background-color: transparent;
      position: sticky;
      user-select: none;
      top: 0;
      z-index: var(--header-z-index, auto);
    }
  }

  /* sortable */
  thead th[aria-sort] {
    cursor: pointer;
  }
  th[aria-sort="ascending"]::after,
  th[aria-sort="descending"]::after {
    position: absolute;
    right: 0;
    top: 0;
  }
  th[aria-sort="ascending"]::after {
    content: "▴";
  }
  th[aria-sort="descending"]::after {
    content: "▾";
  }

  /* column resize */
  thead [role="separator"] {
    position: absolute;
    top: 1px;
    right: 0;
    bottom: 0;
    width: 8px;
    cursor: col-resize;
    background-color: #888;
    z-index: var(--header-separator-z-index, auto);
  }

  /* row numbers */
  tbody [role="rowheader"] {
    position: sticky;
    left: 0;
    user-select: none;
    min-width: 48px;
    max-width: none;
    width: 48px;
    cursor: pointer;
    z-index: var(--header-z-index, auto);
  }
  tbody [role="rowheader"] span {
    display: inline;
  }
  tbody [role="rowheader"] input {
    display: none;
  }
  /* for selected rows, replace row numbers with checkboxes */
  tr[aria-selected="true"] [role="rowheader"] span {
    display: none;
  }
  tr[aria-selected="true"] [role="rowheader"] input {
    display: inline;
  }
  /* if selectable, show checkboxes on hover (and focus) */
  table[aria-multiselectable="true"] tbody [role="rowheader"]:hover span,
  table[aria-multiselectable="true"] tbody [role="rowheader"]:focus span {
    display: none;
  }
  table[aria-multiselectable="true"] tbody [role="rowheader"]:hover input,
  table[aria-multiselectable="true"] tbody [role="rowheader"]:focus input {
    display: inline;
    cursor: pointer;
  }

  /* table corner */
  /* TODO: find a better selector for the table corner */
  thead td:first-child {
    position: sticky;
    cursor: default;
    min-width: 48px;
    max-width: none;
    width: 48px;
    top: 0;
    left: 0;
    z-index: var(--header-corner-z-index, auto);
  }
  /* replace corner with checkbox if selection is enabled (read-only or not) */
  thead td:first-child input {
    display: none;
    margin: 0 auto;
  }
  thead td:first-child[aria-disabled="false"] {
    background: transparent; /* redundant with td:first-child, but allows to force the background if it has been overridden with a logo */
  }
  thead td:first-child[aria-disabled="false"] span {
    display: none;
  }
  thead td:first-child[aria-disabled="false"] input {
    display: block;
  }
  /* if selectable, show pointer cursor on checkbox */
  table[aria-multiselectable="true"] thead td:first-child,
  table[aria-multiselectable="true"] thead td:first-child input {
    cursor: pointer;
  }

  /* mock row numbers */
  .mock-row-label {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    background: var(--mock-row-label-background, transparent);
    z-index: var(--header-background-z-index, auto);
  }
}

/* styling */
.styled {
  & {
    isolation: isolate;
  }
  --header-z-index: 10;
  --header-background-z-index: calc(var(--header-z-index) - 1);
  --header-separator-z-index: calc(var(--header-z-index) + 1);
  --header-corner-z-index: calc(var(--header-z-index) + 3);
  --header-progress-z-index: calc(var(--header-z-index) + 2);
  --cell-placeholder-z-index: 1;
  --cell-horizontal-padding: 12px;

  --focus-border-width: 2px;
  --focus-border-color: #706fb1;
  --focus-background-color: #efeef6;
  --focusable-border-color: #666;
  --focusable-background-color: #f1f1f3;

  .table-scroll:focus {
    outline: none;
    border-radius: 4px;
    border-color: var(--focus-border-color);
    border-width: var(--focus-border-width);
    border-style: solid;
    & + .mock-row-label {
      top: var(--focus-border-width);
      left: var(--focus-border-width);
      bottom: var(--focus-border-width);
    }
  }

  table {
    border-collapse: separate;
    border-spacing: 0;
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
    border-bottom-left-radius: 4px;

    &:focus-visible {
      outline: none;
    }
  }

  thead {
    th {
      background-color: #f1f1f3;
      /* border: none; */
      border-bottom: 2px solid #c9c9c9;
      box-sizing: content-box;
      color: #444;
      height: 20px;
      padding-top: 4px;
      padding-bottom: 4px;
      top: -1px; /* fix 1px gap above thead */

      /* sorting is enabled - add space for the sort caret */
      &[aria-sort] {
        padding-right: calc(var(--cell-horizontal-padding) + 12px);
      }
    }
  }

  th[aria-sort]::after {
    right: 12px;
    top: 4px;
    padding-left: 2px;
    background: none;
    color: #d5d4d6;
  }

  th[data-order-by-index="0"]::after {
    color: inherit;
  }

  /* cells */
  th,
  td {
    border-bottom: 1px solid #ddd;
    border-right: 1px solid #ddd;
    height: 32px;
    max-width: 2000px; /* prevent columns expanding */
    padding: 4px var(--cell-horizontal-padding);
    text-align: left;
    text-overflow: ellipsis;
    white-space: nowrap;

    /* focusable cell (only one: the current navigation cell) */
    &[tabindex="0"] {
      outline-style: solid;
      outline-color: var(--focusable-border-color);
      outline-width: 1px;
      outline-offset: -1px;
      background-color: var(--focusable-background-color);
    }
    /* focused cell: when the current navigation cell is focused. It should never be another cell */
    &:focus {
      outline-style: solid;
      outline-color: var(--focus-border-color);
      outline-width: var(--focus-border-width);
      outline-offset: -2px;
      background-color: var(--focus-background-color);
    }
  }

  /* row error */
  tr[title] {
    color: #a11;
  }

  /* column resize */
  thead [role="separator"] {
    background-color: transparent;
    transition: background-color 0.2s ease;
    &:hover {
      background-color: #aab;
    }
    &:focus {
      outline-style: solid;
      outline-color: var(--focus-border-color);
      outline-width: var(--focus-border-width);
      outline-offset: -2px;
      background-color: #aab;
    }
    &[aria-busy="true"] {
      background-color: #ddd;
    }
  }

  /* row numbers */
  tbody [role="rowheader"] {
    background-color: #f1f1f3;
    border-right: 1px solid #ddd;
    color: #6d6d6d;
    font-size: 0.68rem;
    padding: 0 2px;
    text-align: center;
    min-width: 32px;
    width: 32px;
  }
  /* highlight the selected rows */
  tr[aria-selected="true"] {
    background-color: #fbf7bf;
  }
  tr[aria-selected="true"] [role="rowheader"] {
    background-color: #f1edbb;
  }

  /* table corner */
  /* TODO: find a better selector for the table corner */
  thead td:first-child {
    background-color: #f9f4ff;
    border-right: 1px solid #ccc;
    box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.2);
    min-width: 32px;
    width: 32px;
    top: -1px; /* fix 1px gap above thead */
  }
  thead td:first-child[aria-disabled="false"] {
    background: #f9f4ff; /* redundant with td:first-child, but allows to force the background if it has been overridden with a logo */
  }

  /* pending cell state */
  tbody td[aria-busy="true"] {
    position: relative;
  }
  tbody td[aria-busy="true"]::after {
    content: "";
    position: absolute;
    z-index: var(--cell-placeholder-z-index);
    top: 8px;
    left: 8px;
    right: 8px;
    bottom: 8px;
    border-radius: 4px;
    background: linear-gradient(
      60deg,
      rgba(0, 0, 0, 0.05) 25%,
      rgba(0, 0, 0, 0.08) 50%,
      rgba(0, 0, 0, 0.05) 75%
    );
    background-size: 120px 100%;
    animation: textshimmer 3s infinite linear;
  }
  /* stagger row shimmering */
  tbody tr:nth-child(2n) td[aria-busy="true"]::after {
    animation-delay: -1s;
  }
  tbody tr:nth-child(2n + 1) td[aria-busy="true"]::after {
    animation-delay: -3s;
  }
  tbody tr:nth-child(3n) td[aria-busy="true"]::after {
    animation-delay: -2s;
  }
  tbody tr:nth-child(5n) td[aria-busy="true"]::after {
    animation-delay: -4s;
  }
  tbody tr:nth-child(7n) td[aria-busy="true"]::after {
    animation-delay: -1.5s;
  }

  /* pending row index cell state */
  tbody th[aria-busy="true"]::after {
    content: "427"; /* decorative purpose only - https://developer.mozilla.org/en-US/docs/Web/CSS/content#accessibility */
    filter: blur(4px);
  }

  /* don't hover on mobile */
  @media (hover: hover) {
    tbody tr:hover {
      background-color: #dbdbe5;
    }
    tbody tr:hover td {
      border-right-color: #bbb;
    }
    tbody tr:hover td:first-child {
      background-color: #ccd;
    }
  }

  /* mock row numbers */
  /* Note that this class cannot be easily overriden by custom CSS. Use the variable to change the background. */
  --mock-row-label-background: #f1f1f3;
}

@keyframes textshimmer {
  0% {
    background-position: -120px 0;
  }
  100% {
    background-position: 120px 0;
  }
}

@keyframes shimmer {
  0%,
  100% {
    background-color: #6fb176;
  }
  50% {
    background-color: #adc6b0;
  }
}
